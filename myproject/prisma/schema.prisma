// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//创建User表
model User {
  id        Int      @id @default(autoincrement())  // 用户唯一标识，自增
  username  String   @unique                      // 用户名，唯一
  password  String   // 哈希处理的密码
  email     String   @unique                      // 邮箱，唯一
  createdAt DateTime @default(now())  // 创建时间，默认当前时间
  products Product[] //反向关系，外键关联
}

//创建商品表
model Product {
  id          Int       @id @default(autoincrement())
  name        String    @unique // 商品名称
  description String?   // 商品描述，允许为空
  price       Float     // 商品价格
  stock       Int       // 商品库存量
  createdAt   DateTime  @default(now()) // 创建时间
  imageUrl    String?   // 商品图片URL，允许为空

  userId      Int       // 用户ID，外键关联 User 表
  user        User      @relation(fields: [userId], references: [id])  //外键关联
  
  categoryId  Int?      // 分类ID，外键关联 Category 表
  category    Category? @relation(fields: [categoryId], references: [id]) // 外键关联分类表
  
  @@index([name]) // 创建索引，便于查询
}

//创建商品分类表
model Category {
  id        Int        @id @default(autoincrement()) // 分类ID
  name      String     @unique                      // 分类名称
  description String?   // 商品描述，允许为空
  parentId  Int?       // 父分类ID，允许为空
  createdAt DateTime   @default(now())               // 创建时间

  parent    Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])  // 父分类（自关联）
  children  Category[] @relation("CategoryHierarchy")  // 子分类（自关联）

  products  Product[]  // 与商品的关联，一个分类可以有多个商品

  @@index([id])  // 为分类名称创建索引
}